package com.rubicon.water.rubiconWater.infrastructre.models;

import lombok.RequiredArgsConstructor;
import org.springframework.data.annotation.Id;
import org.springframework.data.mongodb.core.index.Indexed;
import org.springframework.data.mongodb.core.mapping.Document;
import org.springframework.stereotype.Service;

import static com.rubicon.water.rubiconWater.commons.Constants.exceptionCollectionName;

/**
 * The ExceptionModel class is to serve exception handling mechanism at runTime.
 * This mechanism will tail that what is the reason of failing of  : { delivery service ,farmer registration ,
 * order services }
 */
@Service
@RequiredArgsConstructor
@Document(collection = exceptionCollectionName)
public class ExceptionModel {

    @Id
    String id;

    @Indexed
    String eventType;

    String farmerId;

    String farmId;

    long createdOn;

    /**
     * this constructor helps to create ExceptionModel class object.
     *
     * @param id        autoGenerated document id by MongoDB
     * @param eventType type of exception is raised
     * @param farmerId  the id of the farmer on which exception is raising
     * @param farmId    the id of the farm on which exception is raising
     * @param createdOn the timeStamp when the exception is raised
     */
    public ExceptionModel(String id, String eventType, String farmerId, String farmId, long createdOn) {
        this.id = id;
        this.eventType = eventType;
        this.farmerId = farmerId;
        this.farmId = farmId;
        this.createdOn = createdOn;
    }
}
