package com.rubicon.water.rubiconWater.domains.entities;

import com.rubicon.water.rubiconWater.commons.Enums;
import lombok.Getter;
import lombok.RequiredArgsConstructor;
import org.springframework.data.annotation.Id;
import org.springframework.data.mongodb.core.index.Indexed;
import org.springframework.data.mongodb.core.mapping.Document;

import static com.rubicon.water.rubiconWater.commons.Constants.orderCollectionName;

/**
 * The CreateOrderDTO class is used to create order by the farmer .And having the properties for order creation.
 */
@Getter
@RequiredArgsConstructor
@Document(collection = orderCollectionName)
public class Order {

    @Id
    String id;

    @Indexed(unique = true)
    String orderId;

    Enums.OrderStatus orderStatus;

    String farmerId;

    String farmId;

    @Indexed(unique = true)
    long deliveryTimeStamp;

    int waterDeliveryDuration;

    /**
     * @param orderId               the custom generated orderId
     * @param orderStatus           the status of the order
     * @param farmerId              the farmerId ,who is ordering water
     * @param farmId                the farmId of the farm which is farmer specific
     * @param deliveryTimeStamp     the timeStamp when the farmer wants to get delivery of his water order
     * @param waterDeliveryDuration the duration of the water delivery (like 3 hr between 06:00AM to 09:00AM)
     */
    public Order(String orderId, Enums.OrderStatus orderStatus, String farmerId, String farmId,
                 long deliveryTimeStamp, int waterDeliveryDuration) {
        this.id=orderId;
        this.orderId = orderId;
        this.orderStatus = orderStatus;
        this.farmerId = farmerId;
        this.farmId = farmId;
        this.deliveryTimeStamp = deliveryTimeStamp;
        this.waterDeliveryDuration = waterDeliveryDuration;
    }

    /**
     * static factory class to create Oder class object
     */
    public static class OrderFactory {

        /**
         * this static function returns Object of Order class to persist it in db
         *
         * @param orderId               the autoGenerated oderId which is unique
         * @param orderStatus           the status of the order
         * @param farmerId              this is the id of the farmer
         * @param farmId                the farm id for which farmer is ordering water
         * @param deliveryTimeStamp     the timeStamp when to deliver water in farm
         * @param waterDeliveryDuration the hours during then water should to be delivered
         * @return Order class object
         */
        public static Order createOder(String orderId, Enums.OrderStatus orderStatus, String farmerId, String farmId,
                                       long deliveryTimeStamp, int waterDeliveryDuration) {

            return new Order(orderId, orderStatus, farmerId, farmId, deliveryTimeStamp, waterDeliveryDuration);
        }
    }
}
